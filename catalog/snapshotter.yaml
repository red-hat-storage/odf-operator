---
image: quay.io/ocs-dev/snapshot-controller-bundle:main-4bd0abb
name: odf-external-snapshotter-operator.v4.20.0
package: odf-external-snapshotter-operator
properties:
- type: olm.gvk
  value:
    group: groupsnapshot.storage.openshift.io
    kind: VolumeGroupSnapshot
    version: v1beta1
- type: olm.gvk
  value:
    group: groupsnapshot.storage.openshift.io
    kind: VolumeGroupSnapshotClass
    version: v1beta1
- type: olm.gvk
  value:
    group: groupsnapshot.storage.openshift.io
    kind: VolumeGroupSnapshotContent
    version: v1beta1
- type: olm.package
  value:
    packageName: odf-external-snapshotter-operator
    version: 4.20.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYXBpLWFwcHJvdmVkLmt1YmVybmV0ZXMuaW8iOiJodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy1jc2kvZXh0ZXJuYWwtc25hcHNob3R0ZXIvcHVsbC8xMTUwIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE1LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ2b2x1bWVncm91cHNuYXBzaG90Y2xhc3Nlcy5ncm91cHNuYXBzaG90LnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJncm91cHNuYXBzaG90LnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IlZvbHVtZUdyb3VwU25hcHNob3RDbGFzcyIsImxpc3RLaW5kIjoiVm9sdW1lR3JvdXBTbmFwc2hvdENsYXNzTGlzdCIsInBsdXJhbCI6InZvbHVtZWdyb3Vwc25hcHNob3RjbGFzc2VzIiwic2hvcnROYW1lcyI6WyJ2Z3NjbGFzcyIsInZnc2NsYXNzZXMiXSwic2luZ3VsYXIiOiJ2b2x1bWVncm91cHNuYXBzaG90Y2xhc3MifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuZHJpdmVyIiwibmFtZSI6IkRyaXZlciIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiRGV0ZXJtaW5lcyB3aGV0aGVyIGEgVm9sdW1lR3JvdXBTbmFwc2hvdENvbnRlbnQgY3JlYXRlZCB0aHJvdWdoIHRoZSBWb2x1bWVHcm91cFNuYXBzaG90Q2xhc3Mgc2hvdWxkIGJlIGRlbGV0ZWQgd2hlbiBpdHMgYm91bmQgVm9sdW1lR3JvdXBTbmFwc2hvdCBpcyBkZWxldGVkLiIsImpzb25QYXRoIjoiLmRlbGV0aW9uUG9saWN5IiwibmFtZSI6IkRlbGV0aW9uUG9saWN5IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWJldGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZUdyb3VwU25hcHNob3RDbGFzcyBzcGVjaWZpZXMgcGFyYW1ldGVycyB0aGF0IGEgdW5kZXJseWluZyBzdG9yYWdlIHN5c3RlbVxudXNlcyB3aGVuIGNyZWF0aW5nIGEgdm9sdW1lIGdyb3VwIHNuYXBzaG90LiBBIHNwZWNpZmljIFZvbHVtZUdyb3VwU25hcHNob3RDbGFzc1xuaXMgdXNlZCBieSBzcGVjaWZ5aW5nIGl0cyBuYW1lIGluIGEgVm9sdW1lR3JvdXBTbmFwc2hvdCBvYmplY3QuXG5Wb2x1bWVHcm91cFNuYXBzaG90Q2xhc3NlcyBhcmUgbm9uLW5hbWVzcGFjZWQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwiZGVsZXRpb25Qb2xpY3kiOnsiZGVzY3JpcHRpb24iOiJEZWxldGlvblBvbGljeSBkZXRlcm1pbmVzIHdoZXRoZXIgYSBWb2x1bWVHcm91cFNuYXBzaG90Q29udGVudCBjcmVhdGVkXG50aHJvdWdoIHRoZSBWb2x1bWVHcm91cFNuYXBzaG90Q2xhc3Mgc2hvdWxkIGJlIGRlbGV0ZWQgd2hlbiBpdHMgYm91bmRcblZvbHVtZUdyb3VwU25hcHNob3QgaXMgZGVsZXRlZC5cblN1cHBvcnRlZCB2YWx1ZXMgYXJlIFwiUmV0YWluXCIgYW5kIFwiRGVsZXRlXCIuXG5cIlJldGFpblwiIG1lYW5zIHRoYXQgdGhlIFZvbHVtZUdyb3VwU25hcHNob3RDb250ZW50IGFuZCBpdHMgcGh5c2ljYWwgZ3JvdXBcbnNuYXBzaG90IG9uIHVuZGVybHlpbmcgc3RvcmFnZSBzeXN0ZW0gYXJlIGtlcHQuXG5cIkRlbGV0ZVwiIG1lYW5zIHRoYXQgdGhlIFZvbHVtZUdyb3VwU25hcHNob3RDb250ZW50IGFuZCBpdHMgcGh5c2ljYWwgZ3JvdXBcbnNuYXBzaG90IG9uIHVuZGVybHlpbmcgc3RvcmFnZSBzeXN0ZW0gYXJlIGRlbGV0ZWQuXG5SZXF1aXJlZC4iLCJlbnVtIjpbIkRlbGV0ZSIsIlJldGFpbiJdLCJ0eXBlIjoic3RyaW5nIn0sImRyaXZlciI6eyJkZXNjcmlwdGlvbiI6IkRyaXZlciBpcyB0aGUgbmFtZSBvZiB0aGUgc3RvcmFnZSBkcml2ZXIgZXhwZWN0ZWQgdG8gaGFuZGxlIHRoaXMgVm9sdW1lR3JvdXBTbmFwc2hvdENsYXNzLlxuUmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInBhcmFtZXRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IlBhcmFtZXRlcnMgaXMgYSBrZXktdmFsdWUgbWFwIHdpdGggc3RvcmFnZSBkcml2ZXIgc3BlY2lmaWMgcGFyYW1ldGVycyBmb3JcbmNyZWF0aW5nIGdyb3VwIHNuYXBzaG90cy5cblRoZXNlIHZhbHVlcyBhcmUgb3BhcXVlIHRvIEt1YmVybmV0ZXMgYW5kIGFyZSBwYXNzZWQgZGlyZWN0bHkgdG8gdGhlIGRyaXZlci4iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJkZWxldGlvblBvbGljeSIsImRyaXZlciJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6e319XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW10iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY3JlYXRlZEF0IjoiMjAyNS0wNi0xMVQwODoyMzowN1oiLCJvbG0uc2tpcFJhbmdlIjoiIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL2J1aWxkZXIiOiJvcGVyYXRvci1zZGstdjEuMzQuMSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9vcGVyYXRvci10eXBlIjoibm9uLXN0YW5kYWxvbmUiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJ1bmtub3duIn0sIm5hbWUiOiJvZGYtZXh0ZXJuYWwtc25hcHNob3R0ZXItb3BlcmF0b3IudjQuMjAuMCIsIm5hbWVzcGFjZSI6InBsYWNlaG9sZGVyIn0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3sia2luZCI6IlZvbHVtZUdyb3VwU25hcHNob3RDbGFzcyIsIm5hbWUiOiJ2b2x1bWVncm91cHNuYXBzaG90Y2xhc3Nlcy5ncm91cHNuYXBzaG90LnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIiwidmVyc2lvbiI6InYxYmV0YTEifSx7ImtpbmQiOiJWb2x1bWVHcm91cFNuYXBzaG90Q29udGVudCIsIm5hbWUiOiJ2b2x1bWVncm91cHNuYXBzaG90Y29udGVudHMuZ3JvdXBzbmFwc2hvdC5zdG9yYWdlLm9wZW5zaGlmdC5pbyIsInZlcnNpb24iOiJ2MWJldGExIn0seyJraW5kIjoiVm9sdW1lR3JvdXBTbmFwc2hvdCIsIm5hbWUiOiJ2b2x1bWVncm91cHNuYXBzaG90cy5ncm91cHNuYXBzaG90LnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIiwidmVyc2lvbiI6InYxYmV0YTEifV19LCJkZXNjcmlwdGlvbiI6IlNuYXBzaG90IENvbnRyb2xsZXIgcHJvdmlkZXMgdGhlIHNuYXBzaG90IGNvbnRyb2xsZXIgZm9yIG1hbmFnaW5nIHZvbHVtZSBncm91cCBzbmFwc2hvdHMiLCJkaXNwbGF5TmFtZSI6IlNuYXBzaG90IENvbnRyb2xsZXIiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiIiwibWVkaWF0eXBlIjoiIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicGVyc2lzdGVudHZvbHVtZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicGVyc2lzdGVudHZvbHVtZWNsYWltcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsic25hcHNob3Quc3RvcmFnZS5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZXNuYXBzaG90Y29udGVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsIndhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsic25hcHNob3Quc3RvcmFnZS5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZXNuYXBzaG90Y29udGVudHMvc3RhdHVzIl0sInZlcmJzIjpbInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNuYXBzaG90LnN0b3JhZ2UuazhzLmlvIl0sInJlc291cmNlcyI6WyJ2b2x1bWVzbmFwc2hvdHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsIndhdGNoIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsic25hcHNob3Quc3RvcmFnZS5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZXNuYXBzaG90cy9zdGF0dXMiXSwidmVyYnMiOlsidXBkYXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiZ3JvdXBzbmFwc2hvdC5zdG9yYWdlLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsidm9sdW1lZ3JvdXBzbmFwc2hvdGNsYXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImdyb3Vwc25hcHNob3Quc3RvcmFnZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZWdyb3Vwc25hcHNob3Rjb250ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0Iiwid2F0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJncm91cHNuYXBzaG90LnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJ2b2x1bWVncm91cHNuYXBzaG90Y29udGVudHMvc3RhdHVzIl0sInZlcmJzIjpbInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbImdyb3Vwc25hcHNob3Quc3RvcmFnZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZWdyb3Vwc25hcHNob3RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsInVwZGF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbImdyb3Vwc25hcHNob3Quc3RvcmFnZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInZvbHVtZWdyb3Vwc25hcHNob3RzL3N0YXR1cyJdLCJ2ZXJicyI6WyJ1cGRhdGUiLCJwYXRjaCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9kZi1leHRlcm5hbC1zbmFwc2hvdHRlci1vcGVyYXRvciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJvZGYtZXh0ZXJuYWwtc25hcHNob3R0ZXItb3BlcmF0b3IiLCJzcGVjIjp7Im1pblJlYWR5U2Vjb25kcyI6MzUsInJlcGxpY2FzIjoyLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoib2RmLWV4dGVybmFsLXNuYXBzaG90dGVyLW9wZXJhdG9yIn19LCJzdHJhdGVneSI6eyJyb2xsaW5nVXBkYXRlIjp7Im1heFN1cmdlIjowLCJtYXhVbmF2YWlsYWJsZSI6MX0sInR5cGUiOiJSb2xsaW5nVXBkYXRlIn0sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoib2RmLWV4dGVybmFsLXNuYXBzaG90dGVyLW9wZXJhdG9yIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS12PTUiLCItLWxlYWRlci1lbGVjdGlvbj10cnVlIiwiLS1mZWF0dXJlLWdhdGVzPUNTSVZvbHVtZUdyb3VwU25hcHNob3Q9dHJ1ZSJdLCJpbWFnZSI6InF1YXkuaW8vb2NzLWRldi9zbmFwc2hvdC1jb250cm9sbGVyOmxhdGVzdCIsImltYWdlUHVsbFBvbGljeSI6IklmTm90UHJlc2VudCIsIm5hbWUiOiJvZGYtZXh0ZXJuYWwtc25hcHNob3R0ZXItb3BlcmF0b3IiLCJyZXNvdXJjZXMiOnt9fV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9kZi1leHRlcm5hbC1zbmFwc2hvdHRlci1vcGVyYXRvciJ9fX19XSwicGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImRlbGV0ZSIsInVwZGF0ZSIsImNyZWF0ZSJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9kZi1leHRlcm5hbC1zbmFwc2hvdHRlci1vcGVyYXRvciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6Ik93bk5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IlNpbmdsZU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik11bHRpTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJBbGxOYW1lc3BhY2VzIn1dLCJrZXl3b3JkcyI6WyJjc2kiLCJvZGYtZXh0ZXJuYWwtc25hcHNob3R0ZXItb3BlcmF0b3IiXSwibGlua3MiOlt7Im5hbWUiOiJTbmFwc2hvdCBDb250cm9sbGVyIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3JlZC1oYXQtc3RvcmFnZS9leHRlcm5hbC1zbmFwc2hvdHRlciJ9XSwibWF0dXJpdHkiOiJHQSIsInByb3ZpZGVyIjp7Im5hbWUiOiJSZWQgSGF0IFN0b3JhZ2UiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vcmVkLWhhdC1zdG9yYWdlIn0sInZlcnNpb24iOiI0LjIwLjAifX0=
relatedImages:
- image: quay.io/ocs-dev/snapshot-controller-bundle:main-4bd0abb
  name: ""
- image: quay.io/ocs-dev/snapshot-controller:latest
  name: ""
schema: olm.bundle
